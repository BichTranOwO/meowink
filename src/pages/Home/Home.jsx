import React, { useEffect, useState, useRef } from "react";
import "./Home.css";
import { Link } from "react-router-dom";
import catGif from "../../assets/images/Cat-Working-Sticker.gif";
import catTodo from "../../assets/images/meo_todo.png";
import catPomodoro from "../../assets/images/meo_pomodoro.png";
import catDashboard from "../../assets/images/meo_dashboard.png";
import catLike from "../../assets/images/icon-meo-like.png";
import catHeart from "../../assets/images/meo-tha-tym.png";
import catCheckMark from "../../assets/images/meo-tich-xanh.png";
import studyWithCat from "../../assets/images/study-with-meo.jpg"; // ·∫¢nh minh h·ªça cho ph·∫ßn tr√≠ch d·∫´n
import { onAuthStateChanged } from "firebase/auth";

import { auth } from "../../firebase/config"; // file config Firebase
import { useNavigate } from "react-router-dom";
const quotes = [
  "H·ªçc, h·ªçc n·ªØa, h·ªçc m√£i. ‚Äì V.I. Lenin",
  "Th√†nh c√¥ng kh√¥ng ph·∫£i l√† ƒë√≠ch ƒë·∫øn, ƒë√≥ l√† m·ªôt h√†nh tr√¨nh. ‚Äì Zig Ziglar",
  "Kh√¥ng c√≥ thang m√°y n√†o d·∫´n ƒë·∫øn th√†nh c√¥ng, b·∫°n ph·∫£i ƒëi c·∫ßu thang b·ªô.",
  "Ki·∫øn th·ª©c l√† s·ª©c m·∫°nh. ‚Äì Francis Bacon",
  "Ch·ªâ c·∫ßn b·∫°n kh√¥ng d·ª´ng l·∫°i, vi·ªác b·∫°n ti·∫øn ch·∫≠m kh√¥ng th√†nh v·∫•n ƒë·ªÅ. ‚Äì Kh·ªïng T·ª≠",
  "Ng∆∞·ªùi th√†nh c√¥ng l√† ng∆∞·ªùi h·ªçc h·ªèi su·ªët ƒë·ªùi.",
  "H√£y l√†m vi·ªác chƒÉm ch·ªâ trong im l·∫∑ng, ƒë·ªÉ th√†nh c√¥ng l√™n ti·∫øng.",
  "ƒê·ª´ng s·ª£ th·∫•t b·∫°i, h√£y s·ª£ kh√¥ng c·ªë g·∫Øng.",
  "H·ªçc t·ª´ qu√° kh·ª©, s·ªëng trong hi·ªán t·∫°i, hy v·ªçng cho t∆∞∆°ng lai. ‚Äì Albert Einstein",
  "M·ªói ng√†y l√† m·ªôt c∆° h·ªôi m·ªõi ƒë·ªÉ h·ªçc h·ªèi v√† ph√°t tri·ªÉn.",
  "Ghi ch√©p kh√¥ng ch·ªâ l√† l∆∞u l·∫°i th√¥ng tin, ƒë√≥ l√† c√°ch b·∫°n t·ª± ƒë·∫∑t c√¢u h·ªèi, ph√¢n t√≠ch v√† v·∫≠n d·ª•ng ki·∫øn th·ª©c ƒë·ªÉ b∆∞·ªõc xa h∆°n tr√™n h√†nh tr√¨nh h·ªçc t·∫≠p.",
  "Tr√≠ tu·ªá kh√¥ng ph·∫£i s·∫£n ph·∫©m c·ªßa tr∆∞·ªùng l·ªõp, m√† l√† k·∫øt qu·∫£ c·ªßa n·ªó l·ª±c h·ªçc h·ªèi su·ªët ƒë·ªùi."
];

function RandomQuote() {
  const [quote, setQuote] = useState(
    () => quotes[Math.floor(Math.random() * quotes.length)]
  );

  useEffect(() => {
    const id = setInterval(() => {
      setQuote(quotes[Math.floor(Math.random() * quotes.length)]);
    }, 5000);
    return () => clearInterval(id);
  }, []);

  return <blockquote className="home__quote">{quote}</blockquote>;
}

function DropdownButton() {
  const [open, setOpen] = useState(false);
  const ref = useRef();

  useEffect(() => {
    const close = (e) => {
      if (ref.current && !ref.current.contains(e.target)) setOpen(false);
    };
    document.addEventListener("mousedown", close);
    return () => document.removeEventListener("mousedown", close);
  }, []);

  return (
    <div
      className="home__dropdown-button"
      ref={ref}
      onClick={() => setOpen(!open)}
    >
      B·∫Øt ƒë·∫ßu ngay!
      <div className={`dropdown-menu ${open ? "open" : ""}`}>
        <Link to="/todo" className="home__dropdown-item">
          <i className="fa-solid fa-list"></i> T·∫°o Nhi·ªám V·ª•
        </Link>
        <Link to="/pomodoro" className="home__dropdown-item">
          <i className="fa-solid fa-clock"></i> T·∫°o Pomodoro
        </Link>
      </div>
    </div>
  );
}

const Home = () => {
  const [user, setUser] = useState(null);
  const navigate = useNavigate(); // ‚úÖ ƒë·∫∑t ·ªü ƒë√¢y
  useEffect(() => {
    const unsubscribe = onAuthStateChanged(auth, (currentUser) => {
      setUser(currentUser);
    });
    return () => unsubscribe();
  }, []);

  return (
    <div className="home">
      {user ? (
        // ‚úÖ ƒê√É ƒêƒÇNG NH·∫¨P
        <div className="home__banner">
          <div className="home__text">
            <h1 className="home__title">Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi Meowink OwO</h1>
            <h2 className="home__hello">
              Xin ch√†o {user.displayName || user.email} üêæ ƒë√£ gh√© nha :3
            </h2>
            <h3 className="home__subtitle">
              H√¥m nay b·∫°n h√£y t·∫≠p trung h·ªçc v√† l√†m th·∫≠t t·ªët nh√°!!
            </h3>
            <div className="home__content">
              <DropdownButton />
            </div>
          </div>
          <div className="home__image">
            <img src={catGif} alt="Banner" className="home__banner-image" />
          </div>
        </div>
      ) : (
        // ‚ùå CH∆ØA ƒêƒÇNG NH·∫¨P
        <div className="home__banner">
          <div className="home__text">
            <h1 className="home__title">Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi Meowink OwO</h1>
            <h3 className="home__subtitle">
              H√¥m nay b·∫°n h√£y h·ªçc th·∫≠t t·ªët nh√°!!
            </h3>
            <div className="home__content">
              <DropdownButton />
            </div>
          </div>
          <div className="home__image">
            <img src={catGif} alt="Banner" className="home__banner-image" />
          </div>
        </div>
      )}
      {user ? (
        <>
          {/* ƒê√É ƒêƒÇNG NH·∫¨P */}
          <div className="home__card-container">
            <div
              className="home__card"
              role="button"
              tabIndex={0}
              onClick={() => navigate("/todo")}
              onKeyDown={(e) => e.key === "Enter" && navigate("/todo")}
            >
              <img src={catTodo} alt="Todo" className="home__card-icon" />
              <h4 className="home__card-title">Nhi·ªám v·ª• c·ªßa b·∫°n</h4>
              <p className="home__card-desc">
                Xem v√† qu·∫£n l√Ω c√°c nhi·ªám v·ª• ƒë√£ t·∫°o.
              </p>
              <button className="home__btn--card">
                <Link to="/todo" className="home__card-link">
                  <span>ƒêi t·ªõi Todo </span>
                </Link>
              </button>
            </div>

            <div
              className="home__card"
              role="button"
              tabIndex={0}
              onClick={() => navigate("/pomodoro")}
              onKeyDown={(e) => e.key === "Enter" && navigate("/pomodoro")}
            >
              <img
                src={catPomodoro}
                alt="Pomodoro"
                className="home__card-icon"
              />
              <h4 className="home__card-title">Phi√™n Pomodoro</h4>
              <p className="home__card-desc">
                B·∫Øt ƒë·∫ßu ngay m·ªôt phi√™n Pomodoro.
              </p>
              <button className="home__btn--card">
                <Link to="/pomodoro" className="home__card-link">
                  <span> B·∫Øt ƒë·∫ßu </span>
                </Link>
              </button>
            </div>

            <div
              className="home__card"
              role="button"
              tabIndex={0}
              onClick={() => navigate("/dashboard")}
              onKeyDown={(e) => e.key === "Enter" && navigate("/dashboard")}
            >
              <img
                src={catDashboard}
                alt="Dashboard"
                className="home__card-icon"
              />
              <h4 className="home__card-title">Th·ªëng k√™</h4>
              <p className="home__card-desc">Theo d√µi ti·∫øn ƒë·ªô c·ªßa b·∫°n.</p>
              <button className="home__btn--card">
                <Link to="/dashboard" className="home__card-link">
                  <span>Xem th·ªëng k√™ </span>
                </Link>
              </button>
            </div>
          </div>

          <div className="home__big--intro">
            <div className="home__feature--container">
              <div className="home__feature">
                <img
                  src={catLike}
                  alt="Ti·∫øn ƒë·ªô"
                  className="home__feature--icon"
                />
                <span className="home__feature--text">
                  B·∫°n ƒë√£ ho√†n th√†nh 3 nhi·ªám v·ª• h√¥m nay üéâ
                </span>
              </div>
              <div className="home__feature">
                <img
                  src={catHeart}
                  alt="Nh·∫Øc nh·ªü"
                  className="home__feature--icon"
                />
                <span className="home__feature--text">
                  ƒê·ª´ng qu√™n ngh·ªâ ng∆°i sau khi Pomodoro nh√© üí§
                </span>
              </div>
            </div>
          </div>
        </>
      ) : (
        <>
          {/* CH∆ØA ƒêƒÇNG NH·∫¨P */}
          <div className="home__card-container">
            <div className="home__card">
              <img src={catTodo} alt="Nhi·ªám v·ª•" className="home__card-icon" />
              <h4 className="home__card-title">Nhi·ªám v·ª• (Todo List)</h4>
              <p className="home__card-desc">
                T·∫°o, qu·∫£n l√Ω v√† ho√†n th√†nh c√°c nhi·ªám v·ª• h√†ng ng√†y c·ªßa b·∫°n m·ªôt
                c√°ch hi·ªáu qu·∫£.
              </p>
            </div>
            <div className="home__card">
              <img
                src={catPomodoro}
                alt="Pomodoro"
                className="home__card-icon"
              />
              <h4 className="home__card-title">Phi√™n Pomodoro</h4>
              <p className="home__card-desc">
                T·∫≠p trung l√†m vi·ªác v·ªõi k·ªπ thu·∫≠t Pomodoro, xen k·∫Ω gi·ªØa th·ªùi gian
                l√†m vi·ªác v√† ngh·ªâ ng∆°i.
              </p>
            </div>
            <div className="home__card">
              <img
                src={catDashboard}
                alt="Th·ªëng k√™"
                className="home__card-icon"
              />
              <h4 className="home__card-title">Xem th·ªëng k√™</h4>
              <p className="home__card-desc">
                Theo d√µi ti·∫øn ƒë·ªô v√† hi·ªáu su·∫•t l√†m vi·ªác c·ªßa b·∫°n qua c√°c b√°o c√°o
                tr·ª±c quan.
              </p>
            </div>
          </div>

          <div className="home__big--intro">
            <div className="home__feature--container">
              <div className="home__feature">
                <img
                  src={catLike}
                  alt="Giao di·ªán d·ªÖ th∆∞∆°ng"
                  className="home__feature--icon"
                />
                <span className="home__feature--text">
                  Giao di·ªán d·ªÖ th∆∞∆°ng, siu ƒë√°ng iu
                </span>
              </div>
              <div className="home__feature">
                <img
                  src={catHeart}
                  alt="D·ªÖ s·ª≠ d·ª•ng"
                  className="home__feature--icon"
                />
                <span className="home__feature--text">
                  D·ªÖ s·ª≠ d·ª•ng, ph√π h·ª£p cho m·ªçi ƒë·ªëi t∆∞·ª£ng
                </span>
              </div>
              <div className="home__feature">
                <img
                  src={catCheckMark}
                  alt="T·ªëi ∆∞u"
                  className="home__feature--icon"
                />
                <span className="home__feature--text">
                  T·ªëi ∆∞u hi·ªáu su·∫•t h·ªçc t·∫≠p v√† l√†m vi·ªác
                </span>
              </div>
            </div>
          </div>
        </>
      )}

      <div className="home__quote-section">
        <img
          src={studyWithCat}
          alt="H·ªçc c√πng m√®o"
          className="home__quote-image"
        />
        <div className="home__right">
        <div className="home__quote--text">
          <em>
            <RandomQuote />
          </em>
        </div>

        {!user && ( //ch·ªâ hi·ªán khi CH∆ØA ƒêƒÇNG NH·∫¨P
        
          <div className="home__login">
            <h3>B·∫Øt ƒë·∫ßu h√†nh tr√¨nh c·ªßa b·∫°n n√†o!!</h3>
            <p>
              H√£y ƒëƒÉng nh·∫≠p ho·∫∑c ƒëƒÉng k√Ω ƒë·ªÉ tr·∫£i nghi·ªám c√°c t√≠nh nƒÉng tuy·ªát v·ªùi
              c·ªßa Meowink!
            </p>
            <div className="home__login--btn">
              <Link to="/login" className="button--login">
                <i className="fa fa-sign-in-alt"></i> <span>ƒêƒÉng nh·∫≠p</span>
              </Link>
              <Link to="/register" className="button--register">
                <i className="fa fa-user-plus"></i> <span>ƒêƒÉng k√Ω</span>
              </Link>
            </div>
          </div>
        
        )}
        </div>
      </div>
    </div>
  );
};
export default Home;
